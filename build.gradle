plugins {
    id 'fabric-loom' version "${fabric_loom_version}" apply false
}

task cloneJcef(type: Exec) {
    commandLine 'git', 'submodule', 'update', '--init', '--recursive', 'common/java-cef'
}

task publishMaven(type: GradleBuild) {
    group = 'mcef'
    tasks = [
            ':common:publish',
            ':fabric:publish',
            ':forge:publish'
    ]
}

//task publishAll(type: GradleBuild) {
//    group = 'mcef'
//    tasks = [
//            ':common:clean',
//            ':forge:clean',
//            ':fabric:clean',
//            ':forge:curseforge',
//            ':fabric:curseforge'
//    ]
//}

task fabricClient(type: GradleBuild) {
    group = 'mcef'
    tasks = [
            ':fabric:runClient'
    ]
}

task forgeClient(type: GradleBuild) {
    group = 'mcef'
    tasks = [
            ':forge:runClient'
    ]
}

task fabricServer(type: GradleBuild) {
    group = 'mcef'
    tasks = [
            ':fabric:runServer'
    ]
}

task forgeServer(type: GradleBuild) {
    group = 'mcef'
    tasks = [
            ':forge:runServer'
    ]
}

task cleanAll(type: GradleBuild) {
    group = 'mcef'
    tasks = [
            ':common:clean',
            ':fabric:clean',
            ':forge:clean',
    ]
}
